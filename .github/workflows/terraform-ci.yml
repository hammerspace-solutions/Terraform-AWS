# .github/workflows/terraform-ci.yml
# This workflow runs static analysis and a dry run plan on every push/PR.

name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:

# Add OIDC permissions to allow the workflow to request a token from GitHub.
permissions:
  id-token: write
  contents: read

jobs:
  terraform-checks:
    name: Run Terraform Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false # Recommended for CI

      # --- THIS IS THE NEW, SECURE AUTHENTICATION STEP ---
      # This action uses OIDC to securely assume a role in your AWS account.
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # The ARN of the IAM role created in AWS for this repository.
          # This is read from a GitHub secret.
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.REGION || 'us-west-2' }}

      - name: Copy example tfvars for testing
        run: cp example_terraform.tfvars.rename terraform.tfvars

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Install Trivy (for tfsec)
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy (tfsec) Security Scan
        run: trivy config .

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color \
            -var="project_name=${{ vars.PROJECT_NAME }}" \
            -var='deploy_components=${{ vars.DEPLOY_COMPONENTS }}' \
            -var="vpc_id=${{ vars.VPC_ID }}" \
            -var="subnet_id=${{ vars.SUBNET_ID }}" \
            -var="key_name=${{ vars.KEY_NAME }}" \
            -var="clients_ami=${{ vars.CLIENTS_AMI }}" \
            -var="storage_ami=${{ vars.STORAGE_AMI }}" \
            -var="hammerspace_ami=${{ vars.HAMMERSPACE_AMI }}" \
            -var="clients_instance_count=${{ vars.CLIENTS_INSTANCE_COUNT }}" \
            -var="storage_instance_count=${{ vars.STORAGE_INSTANCE_COUNT }}" \
            -var="hammerspace_anvil_count=${{ vars.HAMMERSPACE_ANVIL_COUNT }}" \
            -var="hammerspace_dsx_count=${{ vars.HAMMERSPACE_DSX_COUNT }}" \
            -var="clients_instance_type=${{ vars.CLIENTS_INSTANCE_TYPE }}" \
            -var="storage_instance_type=${{ vars.STORAGE_INSTANCE_TYPE }}" \
            -var="hammerspace_anvil_instance_type=${{ vars.HAMMERSPACE_ANVIL_INSTANCE_TYPE }}" \
            -var="hammerspace_dsx_instance_type=${{ vars.HAMMERSPACE_DSX_INSTANCE_TYPE }}" \
            -var="ansible_instance_type=${{ vars.ANSIBLE_INSTANCE_TYPE }}"
        # The old `env:` block with static keys has been removed.
